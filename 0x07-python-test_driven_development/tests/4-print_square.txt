# 4-print_square.txt

=============================
How to use 4-print_square.py
=============================


This module defines a square-printing function ``print_square(size)``.

Usage
=====

Squared are printed using the ``#`` char. The parameter ``size`` represents
the side of the square.

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(2)
	##
	##

::

	>>> print_square(5)
	#####
	#####
	#####
	#####
	#####

::

	>>> print_square(8)
	########
	########
	########
	########
	########
	########
	########
	########

::

If ``size`` is zero, the funciton pronts nothing.

::

	>>> print_square(0)


Invalid sizes
=============

The parameter ``size`` must be an integer. Otherwise, a TypeError is raised.

::

	>>> print_square("not int")
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(1.2)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

If ``size`` is less than zero, a ValueError is raised.

::

	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

::

	>>> print_square(-6.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'
